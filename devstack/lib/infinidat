#!/usr/bin/env bash
#
# lib/infinidat
# Functions to control the configuration
# and operation of the **Infinidat** storage service
#
# ``stack.sh`` calls the entry points in this order:
#
# - install_infinidat_dependencies
# - configure_infinidat_cinder
# - configure_infinidat_tempest
# - uninstall_infinidat_dependencies

# Save trace setting
XTRACE=$(set +o | grep xtrace)
set +o xtrace

# Functions
# ---------

function install_infinidat_dependencies {
    pip_install infinisdk
}

function configure_infinidat_cinder {
    local INFINIDAT_PREFIX="INFINIDAT_BACKEND_"
    local BACKEND_PAIR
    for BACKEND_PAIR in ${CINDER_ENABLED_BACKENDS//,/ }; do
        local BACKEND_TYPE=${BACKEND_PAIR%%:*}
        local BACKEND_NAME=${BACKEND_PAIR##*:}
        if [[ "$BACKEND_TYPE" == "infinidat" ]]; then
            local BACKEND_PREFIX="${INFINIDAT_PREFIX}${BACKEND_NAME}_"
            local OPTION_ITEM
            iniset "$CINDER_CONF" "$BACKEND_NAME" volume_driver \
                "$TEMPEST_VOLUME_DRIVER"
            iniset "$CINDER_CONF" "$BACKEND_NAME" volume_backend_name \
                "$BACKEND_NAME"
            for OPTION_ITEM in $(set | grep "^$BACKEND_PREFIX"); do
                local OPTION_PAIR="${OPTION_ITEM#$BACKEND_PREFIX}"
                local OPTION_NAME="${OPTION_PAIR%%=*}"
                local OPTION_VALUE="${OPTION_PAIR##*=}"
                iniset "$CINDER_CONF" "$BACKEND_NAME" "$OPTION_NAME" \
                    "$OPTION_VALUE"
            done
        fi
    done

    install -v -d "$CINDER_STATE_PATH/backup"

    iniset $CINDER_CONF DEFAULT backup_file_size 134217728
    iniset $CINDER_CONF DEFAULT backup_sha_block_size_bytes 32768
    iniset $CINDER_CONF DEFAULT backup_driver "$TEMPEST_BACKUP_DRIVER"
    iniset $CINDER_CONF DEFAULT backup_posix_path "$CINDER_STATE_PATH/backup"

    iniset $NOVA_CONF libvirt volume_use_multipath True
    iniset $NOVA_CPU_CONF libvirt volume_use_multipath True
}

function configure_infinidat_tempest {
    iniset $TEMPEST_CONFIG compute-feature-enabled attach_encrypted_volume True
    iniset $TEMPEST_CONFIG compute_feature_enabled block_migration_for_live_migration True
    iniset $TEMPEST_CONFIG compute_feature_enabled live_migration True
    iniset $TEMPEST_CONFIG compute_feature_enabled live_migrate_back_and_forth True
    iniset $TEMPEST_CONFIG compute_feature_enabled resize True
    iniset $TEMPEST_CONFIG compute_feature_enabled shelve_migrate True
    iniset $TEMPEST_CONFIG compute_feature_enabled stable_rescue True
    iniset $TEMPEST_CONFIG compute_feature_enabled swap_volume True
    iniset $TEMPEST_CONFIG compute-feature-enabled volume_multiattach False

    iniset $TEMPEST_CONFIG volume-feature-enabled backup False
    iniset $TEMPEST_CONFIG volume-feature-enabled consistency_group False
    iniset $TEMPEST_CONFIG volume-feature-enabled extend_attached_encrypted_volume True
    iniset $TEMPEST_CONFIG volume-feature-enabled extend_attached_volume True
    iniset $TEMPEST_CONFIG volume-feature-enabled manage_snapshot True
    iniset $TEMPEST_CONFIG volume-feature-enabled manage_volume True
    iniset $TEMPEST_CONFIG volume-feature-enabled multi_backend False
    iniset $TEMPEST_CONFIG volume-feature-enabled volume_revert True

    iniset $TEMPEST_CONFIG volume manage_snapshot_ref 'source-name, openstack-snap-%s'
    iniset $TEMPEST_CONFIG volume manage_volume_ref 'source-name, openstack-vol-%s'
}

function uninstall_infinidat_dependencies {
    pip_uninstall infinisdk
}

# Restore xtrace
$XTRACE

## Local variables:
## mode: shell-script
